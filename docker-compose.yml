version: '3.8'

services:
  #Docker-in-Docker Service
  dind:
    image: docker:dind #Using official Din D image
    container_name: dind
    privileged: true #giving privilaged mode to the container
    user: root #running as a root user
    networks:
      jenkins:
        aliases:
          - docker #setting network aliases to "docker"
    environment:
      DOCKER_TLS_CERTDIR: /certs #setting TLS cert dictionary
    volumes:
      - docker-certs-ca:/certs/ca
      - docker-certs-client:/certs/client
      - jenkins-data:/var/jenkins_home
    expose:
      - 2376 #Make container port visible to other containers

  #jenkins service
  jenkins:
    image: jenkins/jenkins:lts-jdk11 #using Jenkins official LTS image with JDK11
    container_name: jenkins
    user: root #running as a root user
    depends_on:
      - dind #ensuring dind service starts before jenkins
    networks:
      - jenkins #connecting to jenkins network
    ports:
      - 8080:8080 #Jenkins UI
      - 50000:50000 #agent port for communication
    environment:
      DOCKER_HOST: tcp://docker:2376 #pointing Jenkins to docker daemon in dind service
      DOCKER_CERT_PATH: /certs/client
      DOCKER_TLS_VERIFY: 1
    volumes:
      - jenkins-data:/var/jenkins_home
      - docker-certs-client:/certs/client:ro
      - /usr/bin/docker:/usr/bin/docker #mounting docker binary from host to container

networks:
  jenkins:
    name: jenkins #bridge network will be used by default for communication between services

#named volumes
volumes:
  docker-certs-ca: {} #volume used by dind service to mange TLS certifications
  docker-certs-client: {} #volume that stores client side certifications for secure communication with docker daemon, this volume is shared between dind and jenkins
  jenkins-data: {} #volume for continuing jenkins data

